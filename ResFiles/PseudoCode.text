Note - This file contains all the necessary details of the game's AI.

- Things the bot will perform
	- move randomly
	- Consume food
	- Upgrade the weapon according to the player
	- Shoot player if needed
	- Survive

- Bot's Behaviour states
	- Petrol
	- Combat
	- Survive

- Variables to Consider when switching the state of the bot
	- Health status
	- Level XP

- Visual Range of bot
	-- Long Visual Range
	-- Short Visual Range

- Detailed state switch
	- Petrol -> Combat
		-- Enemey detected
		-- Health is not critical

	- Petrol -> Survive
		-- If critical health

	- Survive -> Petrol
		-- If no danger around and health is not critical

	- Combat -> Petrol
		-- No enemies around

	- Survival -> Combat
		-- Health critical, but enemies around attacking

	- Combat -> Survive
		-- Combat is over, but the health is at critical level

Important link
	https://gamedesignskills.com/game-design/combat-design/
	https://leanrada.com/notes/sweep-and-prune/
	https://github.com/SunnyValleyStudio/rigidbody-vs-Transform-movement-in-Unity-2D
	https://www.youtube.com/watch?v=UA2F8s3fCLs
	
Bot states detailed explation 
	Petroling
		- Bot will move forward
		- Consume food according to the hunger desire
		- Hunger desire will be calculated using the formula, which shall depend over the health and level xp rank
	
	Combat
		- If bot sense that enemy is around, then it will decide if he should fight or not.
		- If enough XP then Bot will try to get into combat with surrounding enemy

	Survival
		- if the health and xp is not that stable of the bot, it will switch to survival state and will try to eat more fodd than needed
			to heal itself

	[Regardless of the state of the bot, it will try to avoid the walls at any cost.]

[Todo]
	- Find the nearest resources
		--[Note] -> We are currently focsing on the edible food sources and nothing else
		- The Bot is using vision box, which first create an array of the hash from grid, which is
			lying inside the box
		- Now we need to check for the nearest Resource, which is sitting under the box
			-- First find only hash, which has some resources under it
			-- skip the empty hash
			--